trigger:
- master

resources:
- repo: self 

variables:
  ImageName: 'shruti1402/my-flask-app-new175'
#variables:
#  tag: '$(Build.BuildId)'

pr:
- "*"


stages:
- stage: Build
  jobs:
  - deployment: DeployJob
    environment: 'test'
  - job: BuildJob
    pool:
      vmImage: ubuntu-latest

    steps:
    - task: Docker@1
      displayName: 'Build the Docker image'
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'Docker Hub'
        command: 'Build an image'
        dockerFile: '$(Build.SourcesDirectory)/flask/Dockerfile'
        ImageName: '$(ImageName)'
        buildContext: '$(Build.SourcesDirectory)/app.py'
        repository: '$(DOCKER_REPOSITORY_NAME)'
      env:
        DOCKER_USERNAME: $(DOCKER_USERNAME)
        DOCKER_PASSWORD: $(DOCKER_PASSWORD)
        DOCKER_REPOSITORY_NAME: $(DOCKER_REPOSITORY_NAME)

  
    - task: Docker@1
      displayName: 'Push the Docker image to Dockerhub'
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'Docker Hub'
        command: 'Push an image'
        ImageName: '$(ImageName)'
        DOCKER_REPOSITORY_NAME: '$(DOCKER_REPOSITORY_NAME)'
      env:
        DOCKER_USERNAME: $(DOCKER_USERNAME)
        DOCKER_PASSWORD: $(DOCKER_PASSWORD)
        DOCKER_REPOSITORY_NAME: $(DOCKER_REPOSITORY_NAME)
    
        
  #  - task: CmdLine@2 
  #    displayName: 'Pull the Docker image from Dockerhub'
  #    inputs:
  #     containerregistrytype: 'Container Registry'
  #     dockerRegistryEndpoint: 'Docker Hub'
  #      command: 'Pull an image'
  #      imageName: '$(ImageName)'
  #      DOCKER_REPOSITORY_NAME: '$(DOCKER_REPOSITORY_NAME)'
  #      EC2_SSH_KEY: '$(EC2_SSH_KEY)'
  #      USERNAME: ubuntu
  #      HOST_DNS: '$(HOST_DNS)'
  #    env:
  #      DOCKER_USERNAME: $(DOCKER_USERNAME)
  #      DOCKER_PASSWORD: $(DOCKER_PASSWORD)
  #      EC2_SSH_KEY: $(EC2_SSH_KEY)
  #      USERNAME: ubuntu
  #      HOST_DNS: $(HOST_DNS)
  #      DOCKER_REPOSITORY_NAME: $(DOCKER_REPOSITORY_NAME)
  #  - script: |
  #      sudo docker login
  #      sudo docker pull $(ImageName)
  #      sudo docker stop flask_img_new
  #      sudo docker rm flask_img_new
  #      sudo docker run -d --name flask_img_new -p 8000:8000 $(ImageName)

  - job: Deploy        
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'  # Use the appropriate Python version

    - script: |
        
    
   
        mkdir -p ~/.ssh
        echo "$EC2_SSH_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
    
    
        ssh -o "StrictHostKeyChecking no" -i ~/.ssh/id_rsa ubuntu@$EC2_PUBLIC_IP "docker login; docker pull $ImageName"
      env:
        SSH_PRIVATE_KEY: $(EC2_SSH_KEY)
        displayName: 'Pull Docker Image on EC2'
        EC2_PUBLIC_IP: "$(EC2_PUBLIC_IP)"	
        ImageName: '$(ImageName)'