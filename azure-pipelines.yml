trigger:
- master

resources:
- repo: self 

variables:
  tag: '$(Build.BuildId)'

pr:
- "*"


stages:
- stage: Build
  jobs:
  - deployment: DeployJob
    environment: 'test'
  - job: BuildJob
    pool:
      vmImage: ubuntu-latest

    steps:
    - task: Docker@1
      displayName: 'Build the Docker image'
      inputs:
        #containerregistrytype: 'Docker Hub'
        containerRegistry: 'dockerRegistryServiceConnection'
        command: 'Build an image'
        dockerFile: '$(Build.SourcesDirectory)/flask/Dockerfile'
        #imageName: '$(ImageName)'
        buildContext: '$(Build.SourcesDirectory)/app.py'
        repository: $(DOCKER_REPOSITORY_NAME)
      env:
        DOCKER_USERNAME: $(DOCKER_USERNAME)
        DOCKER_PASSWORD: $(DOCKER_PASSWORD)

  
    - task: Docker@2
      displayName: 'Push the Docker image to Dockerhub'
      inputs:
        containerregistrytype: 'Docker Hub'
        containerRegistry: 'dockerRegistryServiceConnection'
        command: 'Push  '
        imageName: '$(ImageName)'
        DOCKER_REPOSITORY_NAME: 'my-flask-app-new'
      env:
        DOCKER_USERNAME: $(DOCKER_USERNAME)
        DOCKER_PASSWORD: $(DOCKER_PASSWORD)
        
    - task: CmdLine@2 
      displayName: 'Pull the Docker image from Dockerhub'
      inputs:
        containerregistrytype: 'Docker Hub'
        containerRegistry: 'dockerRegistryServiceConnection'
        command: 'Pull '
        imageName: '$(ImageName)'
        DOCKER_REPOSITORY_NAME: 'my-flask-app-new'
      env:
        DOCKER_USERNAME: $(DOCKER_USERNAME)
        DOCKER_PASSWORD: $(DOCKER_PASSWORD)
        EC2_SSH_KEY: $(EC2_SSH_KEY)
        USERNAME: ubuntu
        HOST_DNS: $(HOST_DNS)
    -  script: |
        sudo docker login
        sudo docker pull shruti1402/my-flask-app-new:latest
        sudo docker stop flask_img_new
        sudo docker rm flask_img_new
        sudo docker run -d --name flask_img_new -p 8000:8000 shruti1402/my-flask-app-new

        
    



  #- job: DeployFlaskAppToEC2
  #  steps:
  #  - task: UsePythonVersion@0
  #    inputs:
  #      versionSpec: '3.x'
  #      addToPath: true
  #    displayName: 'Use Python 3.x'

  #  - script: |
  #      cd $(Build.SourcesDirectory)/flask  
  #      echo "$EC2_SSH_KEY" > $(Build.BuildDirectory)/flask/xyz.pem
  #     chmod 600 $(Build.BuildDirectory)/flask/xyz.pem
  #     ssh -i $(EC2_SSH_KEY) ubuntu@52.73.82.30 'sudo docker stop my-flask-app-new '
  #      ssh -i $(EC2_SSH_KEY) ubuntu@52.73.82.30 'sudo docker rm my-flask-app-new '
  #      ssh -i $(EC2_SSH_KEY) ubuntu@52.73.82.30 'sudo docker pull shruti1402/my-flask-app-new:latest'
  #      ssh -i $(EC2_SSH_KEY) ubuntu@52.73.82.30 'sudo    docker run -d --name my-flask-app-new -p 8000:8000 shruti1402/my-flask-app-new:latest'
  #    displayName: 'Pull and Run Docker Image on EC2'
  #    env:
  #     EC2_SSH_KEY: $(EC2_SSH_KEY)
  #      USERNAME: ubuntu
  #     HOST_DNS: $(HOST_DNS)
  #      DOCKER_USERNAME: $(DOCKER_USERNAME)
  #      DOCKER_PASSWORD: $(DOCKER_PASSWORD)
