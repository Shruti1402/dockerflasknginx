trigger:
- master

resources:
- repo: self 

variables:
- group: Docker
#  ImageName: 'shruti1402/my-flask-app-new175'
#variables:
#  tag: '$(Build.BuildId)'

pr:
- "*"
stages:
- stage: Deploy
  displayName: Deploy to EC2
  jobs:
  - job: Deploy
    displayName: Deploy to EC2
    steps:
    - script: 
        echo "${SSH_PRIVATE_KEY}"
        ssh -o "StrictHostKeyChecking no" -i $(SSH_PRIVATE_KEY) ubuntu@$EC2_PUBLIC_IP "docker login; docker pull $(ImageName); docker run -d -p 8080:8000 $(ImageName)"
      displayName: 'SSH into EC2 and Pull Docker Image'

    
        
#    - task: Docker@1 
#      displayName: 'Pull the Docker image from Dockerhub'
#      inputs:
#        containerregistrytype: 'Container Registry'
#        dockerRegistryEndpoint: 'Docker Hub'
#        command: 'Pull'
#        imageName: '$(ImageName)'
#        DOCKER_REPOSITORY_NAME: '$(DOCKER_REPOSITORY_NAME)'
#        EC2_SSH_KEY: '$(EC2_SSH_KEY)'
#        USERNAME: ubuntu
#        HOST_DNS: '$(HOST_DNS)'
#        EC2_PUBLIC_IP: '$(EC2_PUBLIC_IP)'
#      env:
#        DOCKER_USERNAME: $(DOCKER_USERNAME)
#        DOCKER_PASSWORD: $(DOCKER_PASSWORD)
#        EC2_SSH_KEY: $(EC2_SSH_KEY)
#        USERNAME: ubuntu
#        HOST_DNS: $(HOST_DNS)
#        DOCKER_REPOSITORY_NAME: $(DOCKER_REPOSITORY_NAME)
#    - script: |
#        ssh -i $(EC2_SSH_KEY) ubuntu@$(EC2_PUBLIC_IP) "sudo docker login; sudo docker pull $ImageName"
      #  sudo docker pull $(ImageName)
      #  sudo docker stop flask_img_new
      #  sudo docker rm flask_img_new
      #  sudo docker run -d --name flask_img_new -p 8000:8000 $(ImageName)



  
