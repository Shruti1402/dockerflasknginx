trigger:
- master

resources:
- repo: self 

variables:
- group: Docker
#  ImageName: 'shruti1402/my-flask-app-new175'
#variables:
#  tag: '$(Build.BuildId)'

pr:
- "*"
stages:

- stage: Build
  jobs:
  - deployment: DeployJob
    environment: 'test'
#  - job: BuildJob
#    pool:
#      vmImage: ubuntu-latest

#    steps:
#    - task: Docker@1
#      displayName: 'Build the Docker image'
#      inputs:
#        containerregistrytype: 'Container Registry'
#        dockerRegistryEndpoint: 'Docker Hub'
#        command: 'Build an image'
#        dockerFile: '$(Build.SourcesDirectory)/flask/Dockerfile'
#        ImageName: '$(ImageName)'
#        tags: latest
#        buildContext: '$(Build.SourcesDirectory)/app.py'
#        repository: '$(DOCKER_REPOSITORY_NAME)'
#      env:
#        DOCKER_USERNAME: $(DOCKER_USERNAME)
#        DOCKER_PASSWORD: $(DOCKER_PASSWORD)
#        DOCKER_REPOSITORY_NAME: $(DOCKER_REPOSITORY_NAME)

  
#    - task: Docker@1
#      displayName: 'Push the Docker image to Dockerhub'
#      inputs:
#        containerregistrytype: 'Container Registry'
#        dockerRegistryEndpoint: 'Docker Hub'
#        command: 'Push an image'
#        ImageName: '$(ImageName)'
#        tags: latest
#        DOCKER_REPOSITORY_NAME: '$(DOCKER_REPOSITORY_NAME)'
#      env:
#        DOCKER_USERNAME: $(DOCKER_USERNAME)
#        DOCKER_PASSWORD: $(DOCKER_PASSWORD)
#        DOCKER_REPOSITORY_NAME: $(DOCKER_REPOSITORY_NAME)



    
        
  - job: Deploy
    #dependsOn: BuildJob
    steps:
    - checkout: self

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true
        AWS: AWS 
      displayName: 'Set up Python 3.x'

    - script: |
        sudo apt update -y 
        sudo apt install awscli

      displayName: 'Install Aws CLI' 
    - script: |
        aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
        aws configure set region us-east-1
      displayName: 'Configure AWS Credentials'
    
#    - task: InstallSSHKey@0
#      displayName: 'Install an SSH key'
#      inputs:
#        knownHostsEntry: ''
#        sshPublicKey: '$(SSH_PRIVATE_KEY)'
#        sshKeySecureFile: xyz.pem
#        configHostname: EC2


    - task: SSH@0
      inputs:
        sshEndpoint: 'ssh connection'  # Name of your SSH service connection
        runOptions: 'commands'
        commands: |
          ssh -i $(PrivateKeyFilePath) ubuntu@$(EC2_PUBLIC_IP) 'aws s3 ls'
      env:
        PrivateKeyFilePath: $(Agent.TARGET_DIR)/$(SSH_PUBLIC_KEY)
        EC2_PUBLIC_IP: '52.73.82.30'

#    - script: |
#        ls -al 
#        sudo ssh -tt -i xyz.pem ubuntu@$(EC2_PUBLIC_IP)
#      displayName: 'login to AWS EC2'

#    - task: AWSCLI@1
#      inputs:
#        awsCredentials: 'AWS connection'
#        regionName: 'us-east-1'
#    - script: |
#        ls -al
#        cd .ssh
#        ssh-keygen -R hostname
#        sudo ssh -tt -i xyz.pem ubuntu@$(EC2_PUBLIC_IP) 
#      displayName: 'Log in to Aws ec2'





  
