trigger:
- master

resources:
- repo: self 

variables:
- group: Docker
#  ImageName: 'shruti1402/my-flask-app-new175'
#variables:
#  tag: '$(Build.BuildId)'

pr:
- "*"
stages:

- stage: Build
  jobs:
  - deployment: DeployJob
    environment: 'test'
  - job: BuildJob
    pool:
      vmImage: ubuntu-latest

    steps:
    - task: Docker@1
      displayName: 'Build the Docker image'
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'Docker Hub'
        command: 'Build an image'
        dockerFile: '$(Build.SourcesDirectory)/flask/Dockerfile'
        ImageName: '$(ImageName)'
        tags: latest
        buildContext: '$(Build.SourcesDirectory)/app.py'
        repository: '$(DOCKER_REPOSITORY_NAME)'
      env:
        DOCKER_USERNAME: $(DOCKER_USERNAME)
        DOCKER_PASSWORD: $(DOCKER_PASSWORD)
        DOCKER_REPOSITORY_NAME: $(DOCKER_REPOSITORY_NAME)

  
    - task: Docker@1
      displayName: 'Push the Docker image to Dockerhub'
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'Docker Hub'
        command: 'Push an image'
        ImageName: '$(ImageName)'
        tags: latest
        DOCKER_REPOSITORY_NAME: '$(DOCKER_REPOSITORY_NAME)'
      env:
        DOCKER_USERNAME: $(DOCKER_USERNAME)
        DOCKER_PASSWORD: $(DOCKER_PASSWORD)
        DOCKER_REPOSITORY_NAME: $(DOCKER_REPOSITORY_NAME)



    
        
  - job: Deploy
    dependsOn: BuildJob
    steps:
    - checkout: self

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true
        AWS: AWS 
      displayName: 'Set up Python 3.x'

#    - script: |
#        sudo apt update -y 
#        sudo apt install awscli
#      displayName: 'Install Aws CLI' 

#    - script: |
#        aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
#        aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
#        aws configure set region us-east-1
#      displayName: 'Configure AWS Credentials'
    
#    - task: InstallSSHKey@0
#      displayName: 'Install an SSH key'
#      inputs:
#        knownHostsEntry: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCaPuyhFCP/+adx7QFh+l/EY73EAWYb9tIMJZ5mtDFdLApycDHCLhvWd+mFFUxKmo4b9wyCTr9V4kPjy23knSa3D/wR9Qabtvh317YhGPFu9azz5C7EvQDYc2BJvglsFe17x7fi5tw82X5CsKDnCfnOSxKNMfSXGVLQh+W+5tfI7vkEupr4UehH3NI85cRzM5++EAv2gVYn/BW81dE/YLAQGKGsTzM1J/fsADEPt5MtqSy5fdHQdQ9w7aljl73Y+PqQJNHoF7ACyV73C/XBSjC0hlylzYtYeAZW5TdXXurBVgCmt5fYywlDL56ot65rx96drKAGLm0JQ62ryBF/NuiFiVrVMdBqV+Y+JITe1fgrLEEcJRueRnFqMsRQg7i0txWx3Yqk+sliLqvywINlEhFk8bR/cilvv5tTw+p20maUiZ6Toqq/dy4KvihfEtAMM/h/v7+7wDhaKb2Tov4Evn9voMJa3Bm5UX8PNiBRUl1JdJt5QIuD/DzGZtUyxpYRpNk= ubuntu@ip-10-0-13-94'
#        sshPublicKey: '$(id_rsa)'
#        sshKeySecureFile: PrivateKeyFilePath
#        configHostname: EC2
#    - bash: ssh -tt -i $id_rsa ubuntu@52.73.82.30
#      env:
#        PrivateKeyFilePath: $(Agent.TARGET_DIR)/.ssh/id_rsa

    - task: SSH@0
      inputs:
        sshEndpoint: 'ssh connection'  # Name of your SSH service connection
        runOptions: 'commands'
        commands: |
          sudo docker pull shruti1402/my-flask-app-new175:latest
          sudo docker stop my-flask-app
          sudo docker rm -f my-flask-app
          sudo docker run -d --name my-flask-app -p 8000:8000 shruti1402/my-flask-app-new175:latest
      env:
        PrivateKeyFilePath: $(Agent.TARGET_DIR)/$(SSH_PUBLIC_KEY)
        EC2_PUBLIC_IP: '52.73.82.30'

#    - script: |
#        ls -al 
#        sudo ssh -tt -i xyz.pem ubuntu@$(EC2_PUBLIC_IP)
#      displayName: 'login to AWS EC2'

#    - task: AWSCLI@1
#      inputs:
#        awsCredentials: 'AWS connection'
#        regionName: 'us-east-1'
#    - script: |
#        ls -al
#        cd .ssh
#        ssh-keygen -R hostname
#        sudo ssh -tt -i xyz.pem ubuntu@$(EC2_PUBLIC_IP) 
#      displayName: 'Log in to Aws ec2'





  
